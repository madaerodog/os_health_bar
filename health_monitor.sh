#!/bin/bash

# This script monitors journalctl for warnings and logs them to a CSV file.

LOG_FILE="/home/constantin/.health_bar/health_log.csv"
LOG_PROCESSOR_SCRIPT="/home/constantin/.health_bar/log_processor.py"

# Ensure the log file exists with a header if it's a new file
if [ ! -f "$LOG_FILE" ]; then
    echo "count,timestamp,warning,category,level,solution,ignore" > "$LOG_FILE"
fi

# Continuously monitor journalctl for new warnings
journalctl -f -p 4 | while read -r line; do
  # Extract the warning message, removing the timestamp and hostname
  warning=$(echo "$line" | sed -E 's/^[a-zA-Z]{3} [0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2} [^ ]+ //')

  # Remove PID from process name, e.g. `nautilus[1234]:` -> `nautilus:`
  warning=$(echo "$warning" | sed -E 's/\[[0-9]+\]//g')

  # Skip warnings generated by our own health-bar-app to avoid feedback loops
  if echo "$warning" | grep -q "health-bar-app"; then
    continue
  fi

  # Pass the warning to the Python log processor
  python3 "$LOG_PROCESSOR_SCRIPT" "$warning"
done
